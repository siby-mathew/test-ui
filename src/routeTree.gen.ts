/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as ULayoutRouteImport } from './routes/u/_layout'
import { Route as ULayoutRewardsIndexRouteImport } from './routes/u/_layout/rewards/index'
import { Route as ULayoutDocusignDashboardIndexRouteImport } from './routes/u/_layout/docusign/dashboard/index'
import { Route as ULayoutSolmailTrashIdRouteImport } from './routes/u/_layout/solmail/trash/$id'
import { Route as ULayoutSolmailSpamIdRouteImport } from './routes/u/_layout/solmail/spam/$id'
import { Route as ULayoutSolmailOutboxIdRouteImport } from './routes/u/_layout/solmail/outbox/$id'
import { Route as ULayoutSolmailInboxIdRouteImport } from './routes/u/_layout/solmail/inbox/$id'

const URouteImport = createFileRoute('/u')()

const URoute = URouteImport.update({
  id: '/u',
  path: '/u',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/_layout/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ULayoutRoute = ULayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => URoute,
} as any)
const ULayoutRewardsIndexRoute = ULayoutRewardsIndexRouteImport.update({
  id: '/rewards/',
  path: '/rewards/',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutDocusignDashboardIndexRoute =
  ULayoutDocusignDashboardIndexRouteImport.update({
    id: '/docusign/dashboard/',
    path: '/docusign/dashboard/',
    getParentRoute: () => ULayoutRoute,
  } as any)
const ULayoutSolmailTrashIdRoute = ULayoutSolmailTrashIdRouteImport.update({
  id: '/solmail/trash/$id',
  path: '/solmail/trash/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailSpamIdRoute = ULayoutSolmailSpamIdRouteImport.update({
  id: '/solmail/spam/$id',
  path: '/solmail/spam/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailOutboxIdRoute = ULayoutSolmailOutboxIdRouteImport.update({
  id: '/solmail/outbox/$id',
  path: '/solmail/outbox/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailInboxIdRoute = ULayoutSolmailInboxIdRouteImport.update({
  id: '/solmail/inbox/$id',
  path: '/solmail/inbox/$id',
  getParentRoute: () => ULayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/u': typeof ULayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/u/rewards': typeof ULayoutRewardsIndexRoute
  '/u/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/docusign/dashboard': typeof ULayoutDocusignDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/u': typeof ULayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/u/rewards': typeof ULayoutRewardsIndexRoute
  '/u/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/docusign/dashboard': typeof ULayoutDocusignDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/u': typeof URouteWithChildren
  '/u/_layout': typeof ULayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/u/_layout/rewards/': typeof ULayoutRewardsIndexRoute
  '/u/_layout/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/_layout/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/_layout/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/_layout/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/_layout/docusign/dashboard/': typeof ULayoutDocusignDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/u'
    | '/'
    | '/u/rewards'
    | '/u/solmail/inbox/$id'
    | '/u/solmail/outbox/$id'
    | '/u/solmail/spam/$id'
    | '/u/solmail/trash/$id'
    | '/u/docusign/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/u'
    | '/'
    | '/u/rewards'
    | '/u/solmail/inbox/$id'
    | '/u/solmail/outbox/$id'
    | '/u/solmail/spam/$id'
    | '/u/solmail/trash/$id'
    | '/u/docusign/dashboard'
  id:
    | '__root__'
    | '/u'
    | '/u/_layout'
    | '/_layout/'
    | '/u/_layout/rewards/'
    | '/u/_layout/solmail/inbox/$id'
    | '/u/_layout/solmail/outbox/$id'
    | '/u/_layout/solmail/spam/$id'
    | '/u/_layout/solmail/trash/$id'
    | '/u/_layout/docusign/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  URoute: typeof URouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/u': {
      id: '/u'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof URouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/u/_layout': {
      id: '/u/_layout'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof ULayoutRouteImport
      parentRoute: typeof URoute
    }
    '/u/_layout/rewards/': {
      id: '/u/_layout/rewards/'
      path: '/rewards'
      fullPath: '/u/rewards'
      preLoaderRoute: typeof ULayoutRewardsIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/docusign/dashboard/': {
      id: '/u/_layout/docusign/dashboard/'
      path: '/docusign/dashboard'
      fullPath: '/u/docusign/dashboard'
      preLoaderRoute: typeof ULayoutDocusignDashboardIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/trash/$id': {
      id: '/u/_layout/solmail/trash/$id'
      path: '/solmail/trash/$id'
      fullPath: '/u/solmail/trash/$id'
      preLoaderRoute: typeof ULayoutSolmailTrashIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/spam/$id': {
      id: '/u/_layout/solmail/spam/$id'
      path: '/solmail/spam/$id'
      fullPath: '/u/solmail/spam/$id'
      preLoaderRoute: typeof ULayoutSolmailSpamIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/outbox/$id': {
      id: '/u/_layout/solmail/outbox/$id'
      path: '/solmail/outbox/$id'
      fullPath: '/u/solmail/outbox/$id'
      preLoaderRoute: typeof ULayoutSolmailOutboxIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/inbox/$id': {
      id: '/u/_layout/solmail/inbox/$id'
      path: '/solmail/inbox/$id'
      fullPath: '/u/solmail/inbox/$id'
      preLoaderRoute: typeof ULayoutSolmailInboxIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
  }
}

interface ULayoutRouteChildren {
  ULayoutRewardsIndexRoute: typeof ULayoutRewardsIndexRoute
  ULayoutSolmailInboxIdRoute: typeof ULayoutSolmailInboxIdRoute
  ULayoutSolmailOutboxIdRoute: typeof ULayoutSolmailOutboxIdRoute
  ULayoutSolmailSpamIdRoute: typeof ULayoutSolmailSpamIdRoute
  ULayoutSolmailTrashIdRoute: typeof ULayoutSolmailTrashIdRoute
  ULayoutDocusignDashboardIndexRoute: typeof ULayoutDocusignDashboardIndexRoute
}

const ULayoutRouteChildren: ULayoutRouteChildren = {
  ULayoutRewardsIndexRoute: ULayoutRewardsIndexRoute,
  ULayoutSolmailInboxIdRoute: ULayoutSolmailInboxIdRoute,
  ULayoutSolmailOutboxIdRoute: ULayoutSolmailOutboxIdRoute,
  ULayoutSolmailSpamIdRoute: ULayoutSolmailSpamIdRoute,
  ULayoutSolmailTrashIdRoute: ULayoutSolmailTrashIdRoute,
  ULayoutDocusignDashboardIndexRoute: ULayoutDocusignDashboardIndexRoute,
}

const ULayoutRouteWithChildren =
  ULayoutRoute._addFileChildren(ULayoutRouteChildren)

interface URouteChildren {
  ULayoutRoute: typeof ULayoutRouteWithChildren
}

const URouteChildren: URouteChildren = {
  ULayoutRoute: ULayoutRouteWithChildren,
}

const URouteWithChildren = URoute._addFileChildren(URouteChildren)

const rootRouteChildren: RootRouteChildren = {
  URoute: URouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
