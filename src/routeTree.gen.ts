/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as ULayoutRouteImport } from './routes/u/_layout'
import { Route as ULayoutNotFoundRouteImport } from './routes/u/_layout/$not-found'
import { Route as ULayoutFeatureIndexRouteImport } from './routes/u/_layout/feature/index'
import { Route as ULayoutAccountIndexRouteImport } from './routes/u/_layout/account/index'
import { Route as ULayoutWalletLayoutRouteImport } from './routes/u/_layout/wallet/_layout'
import { Route as ULayoutSolsignDashboardIndexRouteImport } from './routes/u/_layout/solsign/dashboard/index'
import { Route as ULayoutRewardsMilestonesIndexRouteImport } from './routes/u/_layout/rewards/milestones/index'
import { Route as ULayoutRewardsDashboardIndexRouteImport } from './routes/u/_layout/rewards/dashboard/index'
import { Route as ULayoutSolmailTrashIdRouteImport } from './routes/u/_layout/solmail/trash/$id'
import { Route as ULayoutSolmailSpamIdRouteImport } from './routes/u/_layout/solmail/spam/$id'
import { Route as ULayoutSolmailOutboxIdRouteImport } from './routes/u/_layout/solmail/outbox/$id'
import { Route as ULayoutSolmailInboxIdRouteImport } from './routes/u/_layout/solmail/inbox/$id'
import { Route as ULayoutWalletLayoutPayIndexRouteImport } from './routes/u/_layout/wallet/_layout/pay/index'
import { Route as ULayoutWalletLayoutActivityIndexRouteImport } from './routes/u/_layout/wallet/_layout/activity/index'

const URouteImport = createFileRoute('/u')()
const ULayoutWalletRouteImport = createFileRoute('/u/_layout/wallet')()

const URoute = URouteImport.update({
  id: '/u',
  path: '/u',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/_layout/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ULayoutRoute = ULayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => URoute,
} as any)
const ULayoutWalletRoute = ULayoutWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutNotFoundRoute = ULayoutNotFoundRouteImport.update({
  id: '/$not-found',
  path: '/$not-found',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutFeatureIndexRoute = ULayoutFeatureIndexRouteImport.update({
  id: '/feature/',
  path: '/feature/',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutAccountIndexRoute = ULayoutAccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutWalletLayoutRoute = ULayoutWalletLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ULayoutWalletRoute,
} as any)
const ULayoutSolsignDashboardIndexRoute =
  ULayoutSolsignDashboardIndexRouteImport.update({
    id: '/solsign/dashboard/',
    path: '/solsign/dashboard/',
    getParentRoute: () => ULayoutRoute,
  } as any)
const ULayoutRewardsMilestonesIndexRoute =
  ULayoutRewardsMilestonesIndexRouteImport.update({
    id: '/rewards/milestones/',
    path: '/rewards/milestones/',
    getParentRoute: () => ULayoutRoute,
  } as any)
const ULayoutRewardsDashboardIndexRoute =
  ULayoutRewardsDashboardIndexRouteImport.update({
    id: '/rewards/dashboard/',
    path: '/rewards/dashboard/',
    getParentRoute: () => ULayoutRoute,
  } as any)
const ULayoutSolmailTrashIdRoute = ULayoutSolmailTrashIdRouteImport.update({
  id: '/solmail/trash/$id',
  path: '/solmail/trash/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailSpamIdRoute = ULayoutSolmailSpamIdRouteImport.update({
  id: '/solmail/spam/$id',
  path: '/solmail/spam/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailOutboxIdRoute = ULayoutSolmailOutboxIdRouteImport.update({
  id: '/solmail/outbox/$id',
  path: '/solmail/outbox/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutSolmailInboxIdRoute = ULayoutSolmailInboxIdRouteImport.update({
  id: '/solmail/inbox/$id',
  path: '/solmail/inbox/$id',
  getParentRoute: () => ULayoutRoute,
} as any)
const ULayoutWalletLayoutPayIndexRoute =
  ULayoutWalletLayoutPayIndexRouteImport.update({
    id: '/pay/',
    path: '/pay/',
    getParentRoute: () => ULayoutWalletLayoutRoute,
  } as any)
const ULayoutWalletLayoutActivityIndexRoute =
  ULayoutWalletLayoutActivityIndexRouteImport.update({
    id: '/activity/',
    path: '/activity/',
    getParentRoute: () => ULayoutWalletLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/u': typeof ULayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/u/$not-found': typeof ULayoutNotFoundRoute
  '/u/wallet': typeof ULayoutWalletLayoutRouteWithChildren
  '/u/account': typeof ULayoutAccountIndexRoute
  '/u/feature': typeof ULayoutFeatureIndexRoute
  '/u/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/rewards/dashboard': typeof ULayoutRewardsDashboardIndexRoute
  '/u/rewards/milestones': typeof ULayoutRewardsMilestonesIndexRoute
  '/u/solsign/dashboard': typeof ULayoutSolsignDashboardIndexRoute
  '/u/wallet/activity': typeof ULayoutWalletLayoutActivityIndexRoute
  '/u/wallet/pay': typeof ULayoutWalletLayoutPayIndexRoute
}
export interface FileRoutesByTo {
  '/u': typeof ULayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/u/$not-found': typeof ULayoutNotFoundRoute
  '/u/wallet': typeof ULayoutWalletLayoutRouteWithChildren
  '/u/account': typeof ULayoutAccountIndexRoute
  '/u/feature': typeof ULayoutFeatureIndexRoute
  '/u/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/rewards/dashboard': typeof ULayoutRewardsDashboardIndexRoute
  '/u/rewards/milestones': typeof ULayoutRewardsMilestonesIndexRoute
  '/u/solsign/dashboard': typeof ULayoutSolsignDashboardIndexRoute
  '/u/wallet/activity': typeof ULayoutWalletLayoutActivityIndexRoute
  '/u/wallet/pay': typeof ULayoutWalletLayoutPayIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/u': typeof URouteWithChildren
  '/u/_layout': typeof ULayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/u/_layout/$not-found': typeof ULayoutNotFoundRoute
  '/u/_layout/wallet': typeof ULayoutWalletRouteWithChildren
  '/u/_layout/wallet/_layout': typeof ULayoutWalletLayoutRouteWithChildren
  '/u/_layout/account/': typeof ULayoutAccountIndexRoute
  '/u/_layout/feature/': typeof ULayoutFeatureIndexRoute
  '/u/_layout/solmail/inbox/$id': typeof ULayoutSolmailInboxIdRoute
  '/u/_layout/solmail/outbox/$id': typeof ULayoutSolmailOutboxIdRoute
  '/u/_layout/solmail/spam/$id': typeof ULayoutSolmailSpamIdRoute
  '/u/_layout/solmail/trash/$id': typeof ULayoutSolmailTrashIdRoute
  '/u/_layout/rewards/dashboard/': typeof ULayoutRewardsDashboardIndexRoute
  '/u/_layout/rewards/milestones/': typeof ULayoutRewardsMilestonesIndexRoute
  '/u/_layout/solsign/dashboard/': typeof ULayoutSolsignDashboardIndexRoute
  '/u/_layout/wallet/_layout/activity/': typeof ULayoutWalletLayoutActivityIndexRoute
  '/u/_layout/wallet/_layout/pay/': typeof ULayoutWalletLayoutPayIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/u'
    | '/'
    | '/u/$not-found'
    | '/u/wallet'
    | '/u/account'
    | '/u/feature'
    | '/u/solmail/inbox/$id'
    | '/u/solmail/outbox/$id'
    | '/u/solmail/spam/$id'
    | '/u/solmail/trash/$id'
    | '/u/rewards/dashboard'
    | '/u/rewards/milestones'
    | '/u/solsign/dashboard'
    | '/u/wallet/activity'
    | '/u/wallet/pay'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/u'
    | '/'
    | '/u/$not-found'
    | '/u/wallet'
    | '/u/account'
    | '/u/feature'
    | '/u/solmail/inbox/$id'
    | '/u/solmail/outbox/$id'
    | '/u/solmail/spam/$id'
    | '/u/solmail/trash/$id'
    | '/u/rewards/dashboard'
    | '/u/rewards/milestones'
    | '/u/solsign/dashboard'
    | '/u/wallet/activity'
    | '/u/wallet/pay'
  id:
    | '__root__'
    | '/u'
    | '/u/_layout'
    | '/_layout/'
    | '/u/_layout/$not-found'
    | '/u/_layout/wallet'
    | '/u/_layout/wallet/_layout'
    | '/u/_layout/account/'
    | '/u/_layout/feature/'
    | '/u/_layout/solmail/inbox/$id'
    | '/u/_layout/solmail/outbox/$id'
    | '/u/_layout/solmail/spam/$id'
    | '/u/_layout/solmail/trash/$id'
    | '/u/_layout/rewards/dashboard/'
    | '/u/_layout/rewards/milestones/'
    | '/u/_layout/solsign/dashboard/'
    | '/u/_layout/wallet/_layout/activity/'
    | '/u/_layout/wallet/_layout/pay/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  URoute: typeof URouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/u': {
      id: '/u'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof URouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/u/_layout': {
      id: '/u/_layout'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof ULayoutRouteImport
      parentRoute: typeof URoute
    }
    '/u/_layout/wallet': {
      id: '/u/_layout/wallet'
      path: '/wallet'
      fullPath: '/u/wallet'
      preLoaderRoute: typeof ULayoutWalletRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/$not-found': {
      id: '/u/_layout/$not-found'
      path: '/$not-found'
      fullPath: '/u/$not-found'
      preLoaderRoute: typeof ULayoutNotFoundRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/feature/': {
      id: '/u/_layout/feature/'
      path: '/feature'
      fullPath: '/u/feature'
      preLoaderRoute: typeof ULayoutFeatureIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/account/': {
      id: '/u/_layout/account/'
      path: '/account'
      fullPath: '/u/account'
      preLoaderRoute: typeof ULayoutAccountIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/wallet/_layout': {
      id: '/u/_layout/wallet/_layout'
      path: '/wallet'
      fullPath: '/u/wallet'
      preLoaderRoute: typeof ULayoutWalletLayoutRouteImport
      parentRoute: typeof ULayoutWalletRoute
    }
    '/u/_layout/solsign/dashboard/': {
      id: '/u/_layout/solsign/dashboard/'
      path: '/solsign/dashboard'
      fullPath: '/u/solsign/dashboard'
      preLoaderRoute: typeof ULayoutSolsignDashboardIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/rewards/milestones/': {
      id: '/u/_layout/rewards/milestones/'
      path: '/rewards/milestones'
      fullPath: '/u/rewards/milestones'
      preLoaderRoute: typeof ULayoutRewardsMilestonesIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/rewards/dashboard/': {
      id: '/u/_layout/rewards/dashboard/'
      path: '/rewards/dashboard'
      fullPath: '/u/rewards/dashboard'
      preLoaderRoute: typeof ULayoutRewardsDashboardIndexRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/trash/$id': {
      id: '/u/_layout/solmail/trash/$id'
      path: '/solmail/trash/$id'
      fullPath: '/u/solmail/trash/$id'
      preLoaderRoute: typeof ULayoutSolmailTrashIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/spam/$id': {
      id: '/u/_layout/solmail/spam/$id'
      path: '/solmail/spam/$id'
      fullPath: '/u/solmail/spam/$id'
      preLoaderRoute: typeof ULayoutSolmailSpamIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/outbox/$id': {
      id: '/u/_layout/solmail/outbox/$id'
      path: '/solmail/outbox/$id'
      fullPath: '/u/solmail/outbox/$id'
      preLoaderRoute: typeof ULayoutSolmailOutboxIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/solmail/inbox/$id': {
      id: '/u/_layout/solmail/inbox/$id'
      path: '/solmail/inbox/$id'
      fullPath: '/u/solmail/inbox/$id'
      preLoaderRoute: typeof ULayoutSolmailInboxIdRouteImport
      parentRoute: typeof ULayoutRoute
    }
    '/u/_layout/wallet/_layout/pay/': {
      id: '/u/_layout/wallet/_layout/pay/'
      path: '/pay'
      fullPath: '/u/wallet/pay'
      preLoaderRoute: typeof ULayoutWalletLayoutPayIndexRouteImport
      parentRoute: typeof ULayoutWalletLayoutRoute
    }
    '/u/_layout/wallet/_layout/activity/': {
      id: '/u/_layout/wallet/_layout/activity/'
      path: '/activity'
      fullPath: '/u/wallet/activity'
      preLoaderRoute: typeof ULayoutWalletLayoutActivityIndexRouteImport
      parentRoute: typeof ULayoutWalletLayoutRoute
    }
  }
}

interface ULayoutWalletLayoutRouteChildren {
  ULayoutWalletLayoutActivityIndexRoute: typeof ULayoutWalletLayoutActivityIndexRoute
  ULayoutWalletLayoutPayIndexRoute: typeof ULayoutWalletLayoutPayIndexRoute
}

const ULayoutWalletLayoutRouteChildren: ULayoutWalletLayoutRouteChildren = {
  ULayoutWalletLayoutActivityIndexRoute: ULayoutWalletLayoutActivityIndexRoute,
  ULayoutWalletLayoutPayIndexRoute: ULayoutWalletLayoutPayIndexRoute,
}

const ULayoutWalletLayoutRouteWithChildren =
  ULayoutWalletLayoutRoute._addFileChildren(ULayoutWalletLayoutRouteChildren)

interface ULayoutWalletRouteChildren {
  ULayoutWalletLayoutRoute: typeof ULayoutWalletLayoutRouteWithChildren
}

const ULayoutWalletRouteChildren: ULayoutWalletRouteChildren = {
  ULayoutWalletLayoutRoute: ULayoutWalletLayoutRouteWithChildren,
}

const ULayoutWalletRouteWithChildren = ULayoutWalletRoute._addFileChildren(
  ULayoutWalletRouteChildren,
)

interface ULayoutRouteChildren {
  ULayoutNotFoundRoute: typeof ULayoutNotFoundRoute
  ULayoutWalletRoute: typeof ULayoutWalletRouteWithChildren
  ULayoutAccountIndexRoute: typeof ULayoutAccountIndexRoute
  ULayoutFeatureIndexRoute: typeof ULayoutFeatureIndexRoute
  ULayoutSolmailInboxIdRoute: typeof ULayoutSolmailInboxIdRoute
  ULayoutSolmailOutboxIdRoute: typeof ULayoutSolmailOutboxIdRoute
  ULayoutSolmailSpamIdRoute: typeof ULayoutSolmailSpamIdRoute
  ULayoutSolmailTrashIdRoute: typeof ULayoutSolmailTrashIdRoute
  ULayoutRewardsDashboardIndexRoute: typeof ULayoutRewardsDashboardIndexRoute
  ULayoutRewardsMilestonesIndexRoute: typeof ULayoutRewardsMilestonesIndexRoute
  ULayoutSolsignDashboardIndexRoute: typeof ULayoutSolsignDashboardIndexRoute
}

const ULayoutRouteChildren: ULayoutRouteChildren = {
  ULayoutNotFoundRoute: ULayoutNotFoundRoute,
  ULayoutWalletRoute: ULayoutWalletRouteWithChildren,
  ULayoutAccountIndexRoute: ULayoutAccountIndexRoute,
  ULayoutFeatureIndexRoute: ULayoutFeatureIndexRoute,
  ULayoutSolmailInboxIdRoute: ULayoutSolmailInboxIdRoute,
  ULayoutSolmailOutboxIdRoute: ULayoutSolmailOutboxIdRoute,
  ULayoutSolmailSpamIdRoute: ULayoutSolmailSpamIdRoute,
  ULayoutSolmailTrashIdRoute: ULayoutSolmailTrashIdRoute,
  ULayoutRewardsDashboardIndexRoute: ULayoutRewardsDashboardIndexRoute,
  ULayoutRewardsMilestonesIndexRoute: ULayoutRewardsMilestonesIndexRoute,
  ULayoutSolsignDashboardIndexRoute: ULayoutSolsignDashboardIndexRoute,
}

const ULayoutRouteWithChildren =
  ULayoutRoute._addFileChildren(ULayoutRouteChildren)

interface URouteChildren {
  ULayoutRoute: typeof ULayoutRouteWithChildren
}

const URouteChildren: URouteChildren = {
  ULayoutRoute: ULayoutRouteWithChildren,
}

const URouteWithChildren = URoute._addFileChildren(URouteChildren)

const rootRouteChildren: RootRouteChildren = {
  URoute: URouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
